{"remainingRequest":"/Users/raj/workspace/github/My-Technical-Learnings/yeoman-test/node_modules/thread-loader/dist/cjs.js??ref--4-2!/Users/raj/workspace/github/My-Technical-Learnings/yeoman-test/node_modules/ts-loader/index.js??ref--4-3!/Users/raj/workspace/github/My-Technical-Learnings/yeoman-test/node_modules/eslint-loader/index.js!/Users/raj/workspace/github/My-Technical-Learnings/yeoman-test/src/main/webapp/app/modules/administration/metrics/metrics.tsx","dependencies":[{"path":"/Users/raj/workspace/github/My-Technical-Learnings/yeoman-test/src/main/webapp/app/modules/administration/metrics/metrics.tsx","mtime":1571750346387},{"path":"/Users/raj/workspace/github/My-Technical-Learnings/yeoman-test/node_modules/react-hot-loader/webpack.js","mtime":499162500000},{"path":"/Users/raj/workspace/github/My-Technical-Learnings/yeoman-test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/raj/workspace/github/My-Technical-Learnings/yeoman-test/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/raj/workspace/github/My-Technical-Learnings/yeoman-test/node_modules/ts-loader/index.js","mtime":1545640398000},{"path":"/Users/raj/workspace/github/My-Technical-Learnings/yeoman-test/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Col, Row } from 'reactstrap';\nimport { CacheMetrics, DatasourceMetrics, GarbageCollectorMetrics, HttpRequestMetrics, JvmMemory, JvmThreads, EndpointsRequestsMetrics, SystemMetrics, Translate } from 'react-jhipster';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { APP_TIMESTAMP_FORMAT, APP_TWO_DIGITS_AFTER_POINT_NUMBER_FORMAT, APP_WHOLE_NUMBER_FORMAT } from 'app/config/constants';\nimport { systemMetrics, systemThreadDump } from '../administration.reducer';\nexport const MetricsPage = (props) => {\n    const [showModal, setShowModal] = useState(false);\n    useEffect(() => {\n        props.systemMetrics();\n        props.systemThreadDump();\n    }, []);\n    const getMetrics = () => {\n        if (!props.isFetching) {\n            props.systemMetrics();\n            props.systemThreadDump();\n        }\n    };\n    const { metrics, threadDump, isFetching } = props;\n    return (React.createElement(\"div\", null,\n        React.createElement(\"h2\", { id: \"metrics-page-heading\" }, \"Application Metrics\"),\n        React.createElement(\"p\", null,\n            React.createElement(Button, { onClick: getMetrics, color: isFetching ? 'btn btn-danger' : 'btn btn-primary', disabled: isFetching },\n                React.createElement(FontAwesomeIcon, { icon: \"sync\" }),\n                \"\\u00A0\",\n                React.createElement(Translate, { component: \"span\", contentKey: \"health.refresh.button\" }, \"Refresh\"))),\n        React.createElement(\"hr\", null),\n        React.createElement(Row, null,\n            React.createElement(Col, { sm: \"12\" },\n                React.createElement(\"h3\", null, \"JVM Metrics\"),\n                React.createElement(Row, null,\n                    React.createElement(Col, { md: \"4\" }, metrics && metrics.jvm ? React.createElement(JvmMemory, { jvmMetrics: metrics.jvm, wholeNumberFormat: APP_WHOLE_NUMBER_FORMAT }) : ''),\n                    React.createElement(Col, { md: \"4\" }, threadDump ? React.createElement(JvmThreads, { jvmThreads: threadDump, wholeNumberFormat: APP_WHOLE_NUMBER_FORMAT }) : ''),\n                    React.createElement(Col, { md: \"4\" }, metrics && metrics.processMetrics ? (React.createElement(SystemMetrics, { systemMetrics: metrics.processMetrics, wholeNumberFormat: APP_WHOLE_NUMBER_FORMAT, timestampFormat: APP_TIMESTAMP_FORMAT })) : (''))))),\n        metrics && metrics.garbageCollector ? (React.createElement(GarbageCollectorMetrics, { garbageCollectorMetrics: metrics.garbageCollector, wholeNumberFormat: APP_WHOLE_NUMBER_FORMAT })) : (''),\n        metrics && metrics['http.server.requests'] ? (React.createElement(HttpRequestMetrics, { requestMetrics: metrics['http.server.requests'], twoDigitAfterPointFormat: APP_TWO_DIGITS_AFTER_POINT_NUMBER_FORMAT, wholeNumberFormat: APP_WHOLE_NUMBER_FORMAT })) : (''),\n        metrics && metrics.endpointsRequests ? (React.createElement(EndpointsRequestsMetrics, { endpointsRequestsMetrics: metrics.endpointsRequests, wholeNumberFormat: APP_WHOLE_NUMBER_FORMAT })) : (''),\n        metrics.cache ? (React.createElement(Row, null,\n            React.createElement(Col, { sm: \"12\" },\n                React.createElement(CacheMetrics, { cacheMetrics: metrics.cache, twoDigitAfterPointFormat: APP_TWO_DIGITS_AFTER_POINT_NUMBER_FORMAT })))) : (''),\n        metrics.databases && JSON.stringify(metrics.databases) !== '{}' ? (React.createElement(Row, null,\n            React.createElement(Col, { sm: \"12\" },\n                React.createElement(DatasourceMetrics, { datasourceMetrics: metrics.databases, twoDigitAfterPointFormat: APP_TWO_DIGITS_AFTER_POINT_NUMBER_FORMAT })))) : ('')));\n};\nconst mapStateToProps = (storeState) => ({\n    metrics: storeState.administration.metrics,\n    isFetching: storeState.administration.loading,\n    threadDump: storeState.administration.threadDump\n});\nconst mapDispatchToProps = { systemMetrics, systemThreadDump };\nexport default connect(mapStateToProps, mapDispatchToProps)(MetricsPage);\n",{"version":3,"file":"/Users/raj/workspace/github/My-Technical-Learnings/yeoman-test/src/main/webapp/app/modules/administration/metrics/metrics.tsx","sourceRoot":"","sources":["/Users/raj/workspace/github/My-Technical-Learnings/yeoman-test/node_modules/eslint-loader/index.js!/Users/raj/workspace/github/My-Technical-Learnings/yeoman-test/src/main/webapp/app/modules/administration/metrics/metrics.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Col, Progress, Row, Table } from 'reactstrap';\nimport {\n  CacheMetrics,\n  DatasourceMetrics,\n  GarbageCollectorMetrics,\n  HttpRequestMetrics,\n  JvmMemory,\n  JvmThreads,\n  EndpointsRequestsMetrics,\n  SystemMetrics,\n  Translate\n} from 'react-jhipster';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport { APP_TIMESTAMP_FORMAT, APP_TWO_DIGITS_AFTER_POINT_NUMBER_FORMAT, APP_WHOLE_NUMBER_FORMAT } from 'app/config/constants';\nimport { systemMetrics, systemThreadDump } from '../administration.reducer';\nimport { IRootState } from 'app/shared/reducers';\n\nexport interface IMetricsPageProps extends StateProps, DispatchProps {}\n\nexport const MetricsPage = (props: IMetricsPageProps) => {\n  const [showModal, setShowModal] = useState(false);\n\n  useEffect(() => {\n    props.systemMetrics();\n    props.systemThreadDump();\n  }, []);\n\n  const getMetrics = () => {\n    if (!props.isFetching) {\n      props.systemMetrics();\n      props.systemThreadDump();\n    }\n  };\n\n  const { metrics, threadDump, isFetching } = props;\n\n  return (\n    <div>\n      <h2 id=\"metrics-page-heading\">Application Metrics</h2>\n      <p>\n        <Button onClick={getMetrics} color={isFetching ? 'btn btn-danger' : 'btn btn-primary'} disabled={isFetching}>\n          <FontAwesomeIcon icon=\"sync\" />\n          &nbsp;\n          <Translate component=\"span\" contentKey=\"health.refresh.button\">\n            Refresh\n          </Translate>\n        </Button>\n      </p>\n      <hr />\n\n      <Row>\n        <Col sm=\"12\">\n          <h3>JVM Metrics</h3>\n          <Row>\n            <Col md=\"4\">\n              {metrics && metrics.jvm ? <JvmMemory jvmMetrics={metrics.jvm} wholeNumberFormat={APP_WHOLE_NUMBER_FORMAT} /> : ''}\n            </Col>\n            <Col md=\"4\">{threadDump ? <JvmThreads jvmThreads={threadDump} wholeNumberFormat={APP_WHOLE_NUMBER_FORMAT} /> : ''}</Col>\n            <Col md=\"4\">\n              {metrics && metrics.processMetrics ? (\n                <SystemMetrics\n                  systemMetrics={metrics.processMetrics}\n                  wholeNumberFormat={APP_WHOLE_NUMBER_FORMAT}\n                  timestampFormat={APP_TIMESTAMP_FORMAT}\n                />\n              ) : (\n                ''\n              )}\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n\n      {metrics && metrics.garbageCollector ? (\n        <GarbageCollectorMetrics garbageCollectorMetrics={metrics.garbageCollector} wholeNumberFormat={APP_WHOLE_NUMBER_FORMAT} />\n      ) : (\n        ''\n      )}\n      {metrics && metrics['http.server.requests'] ? (\n        <HttpRequestMetrics\n          requestMetrics={metrics['http.server.requests']}\n          twoDigitAfterPointFormat={APP_TWO_DIGITS_AFTER_POINT_NUMBER_FORMAT}\n          wholeNumberFormat={APP_WHOLE_NUMBER_FORMAT}\n        />\n      ) : (\n        ''\n      )}\n      {metrics && metrics.endpointsRequests ? (\n        <EndpointsRequestsMetrics endpointsRequestsMetrics={metrics.endpointsRequests} wholeNumberFormat={APP_WHOLE_NUMBER_FORMAT} />\n      ) : (\n        ''\n      )}\n\n      {metrics.cache ? (\n        <Row>\n          <Col sm=\"12\">\n            <CacheMetrics cacheMetrics={metrics.cache} twoDigitAfterPointFormat={APP_TWO_DIGITS_AFTER_POINT_NUMBER_FORMAT} />\n          </Col>\n        </Row>\n      ) : (\n        ''\n      )}\n\n      {metrics.databases && JSON.stringify(metrics.databases) !== '{}' ? (\n        <Row>\n          <Col sm=\"12\">\n            <DatasourceMetrics datasourceMetrics={metrics.databases} twoDigitAfterPointFormat={APP_TWO_DIGITS_AFTER_POINT_NUMBER_FORMAT} />\n          </Col>\n        </Row>\n      ) : (\n        ''\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps = (storeState: IRootState) => ({\n  metrics: storeState.administration.metrics,\n  isFetching: storeState.administration.loading,\n  threadDump: storeState.administration.threadDump\n});\n\nconst mapDispatchToProps = { systemMetrics, systemThreadDump };\n\ntype StateProps = ReturnType<typeof mapStateToProps>;\ntype DispatchProps = typeof mapDispatchToProps;\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MetricsPage);\n"]}]}