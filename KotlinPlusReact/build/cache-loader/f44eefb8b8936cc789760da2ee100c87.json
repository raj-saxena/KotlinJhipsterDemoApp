{"remainingRequest":"/Users/raj/workspace/github/My-Technical-Learnings/yeoman-test/node_modules/thread-loader/dist/cjs.js??ref--4-2!/Users/raj/workspace/github/My-Technical-Learnings/yeoman-test/node_modules/ts-loader/index.js??ref--4-3!/Users/raj/workspace/github/My-Technical-Learnings/yeoman-test/node_modules/eslint-loader/index.js!/Users/raj/workspace/github/My-Technical-Learnings/yeoman-test/src/main/webapp/app/shared/layout/header/header.tsx","dependencies":[{"path":"/Users/raj/workspace/github/My-Technical-Learnings/yeoman-test/src/main/webapp/app/shared/layout/header/header.tsx","mtime":1571750346603},{"path":"/Users/raj/workspace/github/My-Technical-Learnings/yeoman-test/node_modules/react-hot-loader/webpack.js","mtime":499162500000},{"path":"/Users/raj/workspace/github/My-Technical-Learnings/yeoman-test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/raj/workspace/github/My-Technical-Learnings/yeoman-test/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/raj/workspace/github/My-Technical-Learnings/yeoman-test/node_modules/ts-loader/index.js","mtime":1545640398000},{"path":"/Users/raj/workspace/github/My-Technical-Learnings/yeoman-test/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import './header.scss';\nimport React, { useState } from 'react';\nimport { Translate, Storage } from 'react-jhipster';\nimport { Navbar, Nav, NavbarToggler, Collapse } from 'reactstrap';\nimport LoadingBar from 'react-redux-loading-bar';\nimport { Home, Brand } from './header-components';\nimport { AdminMenu, EntitiesMenu, AccountMenu, LocaleMenu } from '../menus';\nconst Header = (props) => {\n    const [menuOpen, setMenuOpen] = useState(false);\n    const handleLocaleChange = event => {\n        const langKey = event.target.value;\n        Storage.session.set('locale', langKey);\n        props.onLocaleChange(langKey);\n    };\n    const renderDevRibbon = () => props.isInProduction === false ? (React.createElement(\"div\", { className: \"ribbon dev\" },\n        React.createElement(\"a\", { href: \"\" },\n            React.createElement(Translate, { contentKey: `global.ribbon.${props.ribbonEnv}` })))) : null;\n    const toggleMenu = () => setMenuOpen(!menuOpen);\n    /* jhipster-needle-add-element-to-menu - JHipster will add new menu items here */\n    return (React.createElement(\"div\", { id: \"app-header\" },\n        renderDevRibbon(),\n        React.createElement(LoadingBar, { className: \"loading-bar\" }),\n        React.createElement(Navbar, { light: true, expand: \"sm\", fixed: \"top\", className: \"bg-light\" },\n            React.createElement(NavbarToggler, { \"aria-label\": \"Menu\", onClick: toggleMenu }),\n            React.createElement(Brand, null),\n            React.createElement(Collapse, { isOpen: menuOpen, navbar: true },\n                React.createElement(Nav, { id: \"header-tabs\", className: \"ml-auto\", navbar: true },\n                    React.createElement(Home, null),\n                    props.isAuthenticated && React.createElement(EntitiesMenu, null),\n                    props.isAuthenticated && props.isAdmin && (React.createElement(AdminMenu, { showSwagger: props.isSwaggerEnabled, showDatabase: !props.isInProduction })),\n                    React.createElement(LocaleMenu, { currentLocale: props.currentLocale, onClick: handleLocaleChange }),\n                    React.createElement(AccountMenu, { isAuthenticated: props.isAuthenticated }))))));\n};\nexport default Header;\n",{"version":3,"file":"/Users/raj/workspace/github/My-Technical-Learnings/yeoman-test/src/main/webapp/app/shared/layout/header/header.tsx","sourceRoot":"","sources":["/Users/raj/workspace/github/My-Technical-Learnings/yeoman-test/node_modules/eslint-loader/index.js!/Users/raj/workspace/github/My-Technical-Learnings/yeoman-test/src/main/webapp/app/shared/layout/header/header.tsx"],"names":[],"mappings":"AAAA,OAAO,eAAe,CAAC;AAEvB,OAAO,KAAK,EAAE,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAC;AACxC,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,MAAM,gBAAgB,CAAC;AACpD,OAAO,EAAE,MAAM,EAAE,GAAG,EAAE,aAAa,EAAe,QAAQ,EAAE,MAAM,YAAY,CAAC;AAI/E,OAAO,UAAU,MAAM,yBAAyB,CAAC;AAEjD,OAAO,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,qBAAqB,CAAC;AAClD,OAAO,EAAE,SAAS,EAAE,YAAY,EAAE,WAAW,EAAE,UAAU,EAAE,MAAM,UAAU,CAAC;AAY5E,MAAM,MAAM,GAAG,CAAC,KAAmB,EAAE,EAAE;IACrC,MAAM,CAAC,QAAQ,EAAE,WAAW,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC;IAEhD,MAAM,kBAAkB,GAAG,KAAK,CAAC,EAAE;QACjC,MAAM,OAAO,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;QACnC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;QACvC,KAAK,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;IAChC,CAAC,CAAC;IAEF,MAAM,eAAe,GAAG,GAAG,EAAE,CAC3B,KAAK,CAAC,cAAc,KAAK,KAAK,CAAC,CAAC,CAAC,CAC/B,6BAAK,SAAS,EAAC,YAAY;QACzB,2BAAG,IAAI,EAAC,EAAE;YACR,oBAAC,SAAS,IAAC,UAAU,EAAE,iBAAiB,KAAK,CAAC,SAAS,EAAE,GAAI,CAC3D,CACA,CACP,CAAC,CAAC,CAAC,IAAI,CAAC;IAEX,MAAM,UAAU,GAAG,GAAG,EAAE,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,CAAC;IAEhD,iFAAiF;IAEjF,OAAO,CACL,6BAAK,EAAE,EAAC,YAAY;QACjB,eAAe,EAAE;QAClB,oBAAC,UAAU,IAAC,SAAS,EAAC,aAAa,GAAG;QACtC,oBAAC,MAAM,IAAC,KAAK,QAAC,MAAM,EAAC,IAAI,EAAC,KAAK,EAAC,KAAK,EAAC,SAAS,EAAC,UAAU;YACxD,oBAAC,aAAa,kBAAY,MAAM,EAAC,OAAO,EAAE,UAAU,GAAI;YACxD,oBAAC,KAAK,OAAG;YACT,oBAAC,QAAQ,IAAC,MAAM,EAAE,QAAQ,EAAE,MAAM;gBAChC,oBAAC,GAAG,IAAC,EAAE,EAAC,aAAa,EAAC,SAAS,EAAC,SAAS,EAAC,MAAM;oBAC9C,oBAAC,IAAI,OAAG;oBACP,KAAK,CAAC,eAAe,IAAI,oBAAC,YAAY,OAAG;oBACzC,KAAK,CAAC,eAAe,IAAI,KAAK,CAAC,OAAO,IAAI,CACzC,oBAAC,SAAS,IAAC,WAAW,EAAE,KAAK,CAAC,gBAAgB,EAAE,YAAY,EAAE,CAAC,KAAK,CAAC,cAAc,GAAI,CACxF;oBACD,oBAAC,UAAU,IAAC,aAAa,EAAE,KAAK,CAAC,aAAa,EAAE,OAAO,EAAE,kBAAkB,GAAI;oBAC/E,oBAAC,WAAW,IAAC,eAAe,EAAE,KAAK,CAAC,eAAe,GAAI,CACnD,CACG,CACJ,CACL,CACP,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,MAAM,CAAC","sourcesContent":["import './header.scss';\n\nimport React, { useState } from 'react';\nimport { Translate, Storage } from 'react-jhipster';\nimport { Navbar, Nav, NavbarToggler, NavbarBrand, Collapse } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport { NavLink as Link } from 'react-router-dom';\nimport LoadingBar from 'react-redux-loading-bar';\n\nimport { Home, Brand } from './header-components';\nimport { AdminMenu, EntitiesMenu, AccountMenu, LocaleMenu } from '../menus';\n\nexport interface IHeaderProps {\n  isAuthenticated: boolean;\n  isAdmin: boolean;\n  ribbonEnv: string;\n  isInProduction: boolean;\n  isSwaggerEnabled: boolean;\n  currentLocale: string;\n  onLocaleChange: Function;\n}\n\nconst Header = (props: IHeaderProps) => {\n  const [menuOpen, setMenuOpen] = useState(false);\n\n  const handleLocaleChange = event => {\n    const langKey = event.target.value;\n    Storage.session.set('locale', langKey);\n    props.onLocaleChange(langKey);\n  };\n\n  const renderDevRibbon = () =>\n    props.isInProduction === false ? (\n      <div className=\"ribbon dev\">\n        <a href=\"\">\n          <Translate contentKey={`global.ribbon.${props.ribbonEnv}`} />\n        </a>\n      </div>\n    ) : null;\n\n  const toggleMenu = () => setMenuOpen(!menuOpen);\n\n  /* jhipster-needle-add-element-to-menu - JHipster will add new menu items here */\n\n  return (\n    <div id=\"app-header\">\n      {renderDevRibbon()}\n      <LoadingBar className=\"loading-bar\" />\n      <Navbar light expand=\"sm\" fixed=\"top\" className=\"bg-light\">\n        <NavbarToggler aria-label=\"Menu\" onClick={toggleMenu} />\n        <Brand />\n        <Collapse isOpen={menuOpen} navbar>\n          <Nav id=\"header-tabs\" className=\"ml-auto\" navbar>\n            <Home />\n            {props.isAuthenticated && <EntitiesMenu />}\n            {props.isAuthenticated && props.isAdmin && (\n              <AdminMenu showSwagger={props.isSwaggerEnabled} showDatabase={!props.isInProduction} />\n            )}\n            <LocaleMenu currentLocale={props.currentLocale} onClick={handleLocaleChange} />\n            <AccountMenu isAuthenticated={props.isAuthenticated} />\n          </Nav>\n        </Collapse>\n      </Navbar>\n    </div>\n  );\n};\n\nexport default Header;\n"]}]}