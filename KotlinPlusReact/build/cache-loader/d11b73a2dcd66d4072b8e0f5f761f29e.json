{"remainingRequest":"/Users/raj/workspace/github/KotlinJhipsterDemoApp/node_modules/thread-loader/dist/cjs.js??ref--4-2!/Users/raj/workspace/github/KotlinJhipsterDemoApp/node_modules/ts-loader/index.js??ref--4-3!/Users/raj/workspace/github/KotlinJhipsterDemoApp/node_modules/eslint-loader/index.js!/Users/raj/workspace/github/KotlinJhipsterDemoApp/src/main/webapp/app/modules/administration/logs/logs.tsx","dependencies":[{"path":"/Users/raj/workspace/github/KotlinJhipsterDemoApp/src/main/webapp/app/modules/administration/logs/logs.tsx","mtime":1571750346367},{"path":"/Users/raj/workspace/github/KotlinJhipsterDemoApp/node_modules/react-hot-loader/webpack.js","mtime":499162500000},{"path":"/Users/raj/workspace/github/KotlinJhipsterDemoApp/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/raj/workspace/github/KotlinJhipsterDemoApp/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/raj/workspace/github/KotlinJhipsterDemoApp/node_modules/ts-loader/index.js","mtime":1545640398000},{"path":"/Users/raj/workspace/github/KotlinJhipsterDemoApp/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Translate } from 'react-jhipster';\nimport { getLoggers, changeLogLevel } from '../administration.reducer';\nexport const LogsPage = (props) => {\n    const [filter, setFilter] = useState('');\n    useEffect(() => {\n        props.getLoggers();\n    }, []);\n    const getLogs = () => {\n        if (!props.isFetching) {\n            props.getLoggers();\n        }\n    };\n    const changeLevel = (loggerName, level) => () => props.changeLogLevel(loggerName, level);\n    const changeFilter = evt => setFilter(evt.target.value);\n    const getClassName = (level, check, className) => (level === check ? `btn btn-sm btn-${className}` : 'btn btn-sm btn-light');\n    const filterFn = l => l.name.toUpperCase().includes(filter.toUpperCase());\n    const { logs, isFetching } = props;\n    const loggers = logs ? Object.entries(logs.loggers).map(e => ({ name: e[0], level: e[1].effectiveLevel })) : [];\n    return (React.createElement(\"div\", null,\n        React.createElement(\"h2\", { id: \"logs-page-heading\" },\n            React.createElement(Translate, { contentKey: \"logs.title\" }, \"Logs\")),\n        React.createElement(\"p\", null,\n            React.createElement(Translate, { contentKey: \"logs.nbloggers\", interpolate: { total: loggers.length } },\n                \"There are \",\n                loggers.length.toString(),\n                \" loggers.\")),\n        React.createElement(\"span\", null,\n            React.createElement(Translate, { contentKey: \"logs.filter\" }, \"Filter\")),\n        React.createElement(\"input\", { type: \"text\", value: filter, onChange: changeFilter, className: \"form-control\", disabled: isFetching }),\n        React.createElement(\"table\", { className: \"table table-sm table-striped table-bordered\", \"aria-describedby\": \"logs-page-heading\" },\n            React.createElement(\"thead\", null,\n                React.createElement(\"tr\", { title: \"click to order\" },\n                    React.createElement(\"th\", null,\n                        React.createElement(\"span\", null,\n                            React.createElement(Translate, { contentKey: \"logs.table.name\" }, \"Name\"))),\n                    React.createElement(\"th\", null,\n                        React.createElement(\"span\", null,\n                            React.createElement(Translate, { contentKey: \"logs.table.level\" }, \"Level\"))))),\n            React.createElement(\"tbody\", null, loggers.filter(filterFn).map((logger, i) => (React.createElement(\"tr\", { key: `log-row-${i}` },\n                React.createElement(\"td\", null,\n                    React.createElement(\"small\", null, logger.name)),\n                React.createElement(\"td\", null,\n                    React.createElement(\"button\", { disabled: isFetching, onClick: changeLevel(logger.name, 'TRACE'), className: getClassName(logger.level, 'TRACE', 'primary') }, \"TRACE\"),\n                    React.createElement(\"button\", { disabled: isFetching, onClick: changeLevel(logger.name, 'DEBUG'), className: getClassName(logger.level, 'DEBUG', 'success') }, \"DEBUG\"),\n                    React.createElement(\"button\", { disabled: isFetching, onClick: changeLevel(logger.name, 'INFO'), className: getClassName(logger.level, 'INFO', 'info') }, \"INFO\"),\n                    React.createElement(\"button\", { disabled: isFetching, onClick: changeLevel(logger.name, 'WARN'), className: getClassName(logger.level, 'WARN', 'warning') }, \"WARN\"),\n                    React.createElement(\"button\", { disabled: isFetching, onClick: changeLevel(logger.name, 'ERROR'), className: getClassName(logger.level, 'ERROR', 'danger') }, \"ERROR\"),\n                    React.createElement(\"button\", { disabled: isFetching, onClick: changeLevel(logger.name, 'OFF'), className: getClassName(logger.level, 'OFF', 'secondary') }, \"OFF\")))))))));\n};\nconst mapStateToProps = ({ administration }) => ({\n    logs: administration.logs,\n    isFetching: administration.loading\n});\nconst mapDispatchToProps = { getLoggers, changeLogLevel };\nexport default connect(mapStateToProps, mapDispatchToProps)(LogsPage);\n",{"version":3,"file":"/Users/raj/workspace/github/KotlinJhipsterDemoApp/src/main/webapp/app/modules/administration/logs/logs.tsx","sourceRoot":"","sources":["/Users/raj/workspace/github/KotlinJhipsterDemoApp/node_modules/eslint-loader/index.js!/Users/raj/workspace/github/KotlinJhipsterDemoApp/src/main/webapp/app/modules/administration/logs/logs.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Translate } from 'react-jhipster';\n\nimport { getLoggers, changeLogLevel } from '../administration.reducer';\nimport { IRootState } from 'app/shared/reducers';\n\nexport interface ILogsPageProps extends StateProps, DispatchProps {}\n\nexport const LogsPage = (props: ILogsPageProps) => {\n  const [filter, setFilter] = useState('');\n\n  useEffect(() => {\n    props.getLoggers();\n  }, []);\n\n  const getLogs = () => {\n    if (!props.isFetching) {\n      props.getLoggers();\n    }\n  };\n\n  const changeLevel = (loggerName, level) => () => props.changeLogLevel(loggerName, level);\n\n  const changeFilter = evt => setFilter(evt.target.value);\n\n  const getClassName = (level, check, className) => (level === check ? `btn btn-sm btn-${className}` : 'btn btn-sm btn-light');\n\n  const filterFn = l => l.name.toUpperCase().includes(filter.toUpperCase());\n\n  const { logs, isFetching } = props;\n  const loggers = logs ? Object.entries(logs.loggers).map(e => ({ name: e[0], level: e[1].effectiveLevel })) : [];\n\n  return (\n    <div>\n      <h2 id=\"logs-page-heading\">\n        <Translate contentKey=\"logs.title\">Logs</Translate>\n      </h2>\n      <p>\n        <Translate contentKey=\"logs.nbloggers\" interpolate={{ total: loggers.length }}>\n          There are {loggers.length.toString()} loggers.\n        </Translate>\n      </p>\n\n      <span>\n        <Translate contentKey=\"logs.filter\">Filter</Translate>\n      </span>\n      <input type=\"text\" value={filter} onChange={changeFilter} className=\"form-control\" disabled={isFetching} />\n\n      <table className=\"table table-sm table-striped table-bordered\" aria-describedby=\"logs-page-heading\">\n        <thead>\n          <tr title=\"click to order\">\n            <th>\n              <span>\n                <Translate contentKey=\"logs.table.name\">Name</Translate>\n              </span>\n            </th>\n            <th>\n              <span>\n                <Translate contentKey=\"logs.table.level\">Level</Translate>\n              </span>\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          {loggers.filter(filterFn).map((logger, i) => (\n            <tr key={`log-row-${i}`}>\n              <td>\n                <small>{logger.name}</small>\n              </td>\n              <td>\n                <button\n                  disabled={isFetching}\n                  onClick={changeLevel(logger.name, 'TRACE')}\n                  className={getClassName(logger.level, 'TRACE', 'primary')}\n                >\n                  TRACE\n                </button>\n                <button\n                  disabled={isFetching}\n                  onClick={changeLevel(logger.name, 'DEBUG')}\n                  className={getClassName(logger.level, 'DEBUG', 'success')}\n                >\n                  DEBUG\n                </button>\n                <button\n                  disabled={isFetching}\n                  onClick={changeLevel(logger.name, 'INFO')}\n                  className={getClassName(logger.level, 'INFO', 'info')}\n                >\n                  INFO\n                </button>\n                <button\n                  disabled={isFetching}\n                  onClick={changeLevel(logger.name, 'WARN')}\n                  className={getClassName(logger.level, 'WARN', 'warning')}\n                >\n                  WARN\n                </button>\n                <button\n                  disabled={isFetching}\n                  onClick={changeLevel(logger.name, 'ERROR')}\n                  className={getClassName(logger.level, 'ERROR', 'danger')}\n                >\n                  ERROR\n                </button>\n                <button\n                  disabled={isFetching}\n                  onClick={changeLevel(logger.name, 'OFF')}\n                  className={getClassName(logger.level, 'OFF', 'secondary')}\n                >\n                  OFF\n                </button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ administration }: IRootState) => ({\n  logs: administration.logs,\n  isFetching: administration.loading\n});\n\nconst mapDispatchToProps = { getLoggers, changeLogLevel };\n\ntype StateProps = ReturnType<typeof mapStateToProps>;\ntype DispatchProps = typeof mapDispatchToProps;\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LogsPage);\n"]}]}